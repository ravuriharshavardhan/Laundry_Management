apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"

/**
 * React Native configuration
 */
react {
    autolinkLibrariesWithApp()
}

def enableProguardInReleaseBuilds = false

// Use JavaScriptCore (JSC) or Hermes
def jscFlavor = 'org.webkit:android-jsc:+'

android {
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    namespace "com.laundry_management"

    defaultConfig {
        applicationId "com.laundry_management"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
    }

    splits {
        abi {
            reset()
            enable true
            universalApk true
            include "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
        }
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }

        release {
            def storeFilePath = project.hasProperty('MYAPP_UPLOAD_STORE_FILE') ? file(MYAPP_UPLOAD_STORE_FILE) : null
            def storePasswordValue = project.hasProperty('MYAPP_UPLOAD_STORE_PASSWORD') ? MYAPP_UPLOAD_STORE_PASSWORD : ""
            def keyAliasValue = project.hasProperty('MYAPP_UPLOAD_KEY_ALIAS') ? MYAPP_UPLOAD_KEY_ALIAS : ""
            def keyPasswordValue = project.hasProperty('MYAPP_UPLOAD_KEY_PASSWORD') ? MYAPP_UPLOAD_KEY_PASSWORD : ""

            if (storeFilePath != null) {
                storeFile storeFilePath
                storePassword storePasswordValue
                keyAlias keyAliasValue
                keyPassword keyPasswordValue
            } else {
                // Provide dummy values to prevent build failure
                storeFile file('dummy.keystore')
                storePassword "notset"
                keyAlias "notset"
                keyPassword "notset"
                println "⚠️  WARNING: Release keystore not found. APK will not be signed properly."
            }
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            // Apply signing config only if keystore info is available
            if (project.hasProperty('MYAPP_UPLOAD_STORE_FILE')) {
                signingConfig signingConfigs.release
            } else {
                println "⚠️  No release signing config set. Unsigned APK will be built."
            }

            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
}

dependencies {
    implementation("com.facebook.react:react-android")

    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}

// React Native Vector Icons support
apply from: file("../../node_modules/react-native-vector-icons/fonts.gradle")
